# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
#   build-darwin:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         goos: [darwin]
#         goarch: [amd64, arm64]
#       fail-fast: true
#     name: Go ${{ matrix.goos }} ${{ matrix.goarch }} build
#     env:
#       GOOS: ${{ matrix.goos }}
#       GOARCH: ${{ matrix.goarch }}
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3
#       - name: Setup Go
#         uses: actions/setup-go@v3
#         with:
#           go-version: 1.19.x
#           cache: true
#       - name: Build
#         run: |
#           go build -trimpath -ldflags "-s -w" -o stove-helper cmd/stove-helper/main.go
#           cp config.example.yaml config.yaml
#           zip -r stove-helper_${{ matrix.goos }}_${{ matrix.goarch }}.zip stove-helper config.yaml data LICENSE README.md
#       - name: Upload Artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: stove-helper_${{ matrix.goos }}_${{ matrix.goarch }}.zip
#           path: stove-helper_${{ matrix.goos }}_${{ matrix.goarch }}.zip

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
      fail-fast: true
    name: Go ${{ matrix.goos }} ${{ matrix.goarch }} build
    env:
      CGO_ENABLED: 1
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
          cache: true
      - name: Install libpcap-dev
        run: sudo apt-get install -y libpcap-dev
      - name: Build
        run: |
          go build -trimpath -ldflags "-s -w" -o stove-helper cmd/stove-helper/main.go
          cp config.example.yaml config.yaml
          zip -r stove-helper_${{ matrix.goos }}_${{ matrix.goarch }}.zip stove-helper config.yaml data LICENSE README.md
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: stove-helper_${{ matrix.goos }}_${{ matrix.goarch }}.zip
          path: stove-helper_${{ matrix.goos }}_${{ matrix.goarch }}.zip

  build-windows:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows]
        goarch: [386, amd64]
      fail-fast: true
    name: Go ${{ matrix.goos }} ${{ matrix.goarch }} build
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.x
          cache: true
      - name: Build
        run: |
          export SHORT_COMMIT_HASH=$(git rev-parse --short HEAD)
          go build -trimpath -ldflags "-s -w -X pkg.ShortCommitHash=$SHORT_COMMIT_HASH" -o stove-helper.exe cmd/stove-helper/main.go
          cp config.example.yaml config.yaml
          zip -r stove-helper_${{ matrix.goos }}_${{ matrix.goarch }}.zip stove-helper.exe config.yaml data LICENSE README.md
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: stove-helper_${{ matrix.goos }}_${{ matrix.goarch }}.zip
          path: stove-helper_${{ matrix.goos }}_${{ matrix.goarch }}.zip
